(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([e.id,'*{\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n}\n.container{\n  overflow-x: hidden;\n}\n.second-row{\n    display:flex;\n}\n/* Header */\n.header-container{\n    background-color: black;\n    padding:1rem;\n}\n.logo{\n    color: white;\n    font-size: 1.5rem;\n}\n/* Sidebar */\n\n.sidebar{\n    width:20%;\n    display: flex;\n    flex-direction: column;\n    background-color: beige;\n}\n.sidebar .dates{\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  padding:1rem;\n  gap:5px;\n}\n.sidebar .sidebar-projects{\n    display: flex;\n    flex-direction: column;\n    padding:1rem;\n    width: 50%;\n    gap:5px;\n}\n.projectbuttons{\n  display: flex;\n  padding-top: 0.5rem;\n}\n/* Display */\n\n.display{\n  max-width: 80%;\n    flex-grow: 1;\n    margin:1rem;\n}\n\n/* Task */\n.task-options ul{\n    display :flex;\n\n}\n.top{\n    display: flex;\n    justify-content: space-between;\n}\nli{\n    list-style-type: none;\n}\n\n\n/* button */\nbutton {\n  padding: 0.6em 2em;\n  border: none;\n  outline: none;\n  color: rgb(255, 255, 255);\n  background: #111;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n}\n\nbutton:before {\n  content: "";\n  background: linear-gradient(\n    45deg,\n    #ff0000,\n    #ff7300,\n    #fffb00,\n    #48ff00,\n    #00ffd5,\n    #002bff,\n    #7a00ff,\n    #ff00c8,\n    #ff0000\n  );\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  background-size: 400%;\n  z-index: -1;\n  filter: blur(5px);\n  -webkit-filter: blur(5px);\n  width: calc(100% + 4px);\n  height: calc(100% + 4px);\n  animation: glowing-button-85 20s linear infinite;\n  transition: opacity 0.3s ease-in-out;\n  border-radius: 10px;\n}\n\n@keyframes glowing-button-85 {\n  0% {\n    background-position: 0 0;\n  }\n  50% {\n    background-position: 400% 0;\n  }\n  100% {\n    background-position: 0 0;\n  }\n}\n\nbutton:after {\n  z-index: -1;\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: #222;\n  left: 0;\n  top: 0;\n  border-radius: 10px;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,QAAQ;IACR,SAAS;IACT,sBAAsB;AAC1B;AACA;EACE,kBAAkB;AACpB;AACA;IACI,YAAY;AAChB;AACA,WAAW;AACX;IACI,uBAAuB;IACvB,YAAY;AAChB;AACA;IACI,YAAY;IACZ,iBAAiB;AACrB;AACA,YAAY;;AAEZ;IACI,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,uBAAuB;AAC3B;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,UAAU;EACV,YAAY;EACZ,OAAO;AACT;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,YAAY;IACZ,UAAU;IACV,OAAO;AACX;AACA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA,YAAY;;AAEZ;EACE,cAAc;IACZ,YAAY;IACZ,WAAW;AACf;;AAEA,SAAS;AACT;IACI,aAAa;;AAEjB;AACA;IACI,aAAa;IACb,8BAA8B;AAClC;AACA;IACI,qBAAqB;AACzB;;;AAGA,WAAW;AACX;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,yBAAyB;EACzB,gBAAgB;EAChB,eAAe;EACf,kBAAkB;EAClB,UAAU;EACV,mBAAmB;EACnB,iBAAiB;EACjB,yBAAyB;EACzB,0BAA0B;AAC5B;;AAEA;EACE,WAAW;EACX;;;;;;;;;;;GAWC;EACD,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,qBAAqB;EACrB,WAAW;EACX,iBAAiB;EACjB,yBAAyB;EACzB,uBAAuB;EACvB,wBAAwB;EACxB,gDAAgD;EAChD,oCAAoC;EACpC,mBAAmB;AACrB;;AAEA;EACE;IACE,wBAAwB;EAC1B;EACA;IACE,2BAA2B;EAC7B;EACA;IACE,wBAAwB;EAC1B;AACF;;AAEA;EACE,WAAW;EACX,WAAW;EACX,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,OAAO;EACP,MAAM;EACN,mBAAmB;AACrB",sourcesContent:['*{\n    margin:0;\n    padding:0;\n    box-sizing: border-box;\n}\n.container{\n  overflow-x: hidden;\n}\n.second-row{\n    display:flex;\n}\n/* Header */\n.header-container{\n    background-color: black;\n    padding:1rem;\n}\n.logo{\n    color: white;\n    font-size: 1.5rem;\n}\n/* Sidebar */\n\n.sidebar{\n    width:20%;\n    display: flex;\n    flex-direction: column;\n    background-color: beige;\n}\n.sidebar .dates{\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  padding:1rem;\n  gap:5px;\n}\n.sidebar .sidebar-projects{\n    display: flex;\n    flex-direction: column;\n    padding:1rem;\n    width: 50%;\n    gap:5px;\n}\n.projectbuttons{\n  display: flex;\n  padding-top: 0.5rem;\n}\n/* Display */\n\n.display{\n  max-width: 80%;\n    flex-grow: 1;\n    margin:1rem;\n}\n\n/* Task */\n.task-options ul{\n    display :flex;\n\n}\n.top{\n    display: flex;\n    justify-content: space-between;\n}\nli{\n    list-style-type: none;\n}\n\n\n/* button */\nbutton {\n  padding: 0.6em 2em;\n  border: none;\n  outline: none;\n  color: rgb(255, 255, 255);\n  background: #111;\n  cursor: pointer;\n  position: relative;\n  z-index: 0;\n  border-radius: 10px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n}\n\nbutton:before {\n  content: "";\n  background: linear-gradient(\n    45deg,\n    #ff0000,\n    #ff7300,\n    #fffb00,\n    #48ff00,\n    #00ffd5,\n    #002bff,\n    #7a00ff,\n    #ff00c8,\n    #ff0000\n  );\n  position: absolute;\n  top: -2px;\n  left: -2px;\n  background-size: 400%;\n  z-index: -1;\n  filter: blur(5px);\n  -webkit-filter: blur(5px);\n  width: calc(100% + 4px);\n  height: calc(100% + 4px);\n  animation: glowing-button-85 20s linear infinite;\n  transition: opacity 0.3s ease-in-out;\n  border-radius: 10px;\n}\n\n@keyframes glowing-button-85 {\n  0% {\n    background-position: 0 0;\n  }\n  50% {\n    background-position: 400% 0;\n  }\n  100% {\n    background-position: 0 0;\n  }\n}\n\nbutton:after {\n  z-index: -1;\n  content: "";\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: #222;\n  left: 0;\n  top: 0;\n  border-radius: 10px;\n}'],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),a=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(a).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],s=o.base?d[0]+o.base:d[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=t(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var f=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var d=o(e,r),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=d}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),i=t(569),a=t.n(i),c=t(565),d=t.n(c),s=t(216),l=t.n(s),A=t(589),u=t.n(A),p=t(426),f={};function m(){console.log(2121);const e=document.querySelector(".project"),n=document.querySelectorAll(".add-task");n.forEach((e=>e.setAttribute("type","button")));const t=document.querySelector(".taskinput");function o(){if(console.log(t.value),""===t.value)return;const n=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div"),i=document.createElement("divasdassa"),a=document.createElement("div"),c=document.createElement("div"),d=document.createElement("ul"),s=document.createElement("ul"),l=document.createElement("li"),A=document.createElement("li"),u=document.createElement("li"),p=document.createElement("li"),f=document.createElement("li"),m=document.createElement("buttoasdassan"),b=document.createElement("button"),C=document.createElement("button");n.classList.add("task"),o.classList.add("top"),r.classList.add("task-options"),i.classList.add("bottom"),a.classList.add("description-text"),c.classList.add("task-title"),p.classList.add("description"),f.classList.add("due-date"),m.classList.add("trash"),m.textContent="trash",b.textContent="completed",C.textContent="edit",b.classList.add("completed"),C.classList.add("edit"),p.textContent="how to do",n.append(o,i),o.append(c,r),r.appendChild(d),d.append(l,A,u),l.appendChild(m),A.appendChild(b),u.appendChild(C),i.appendChild(s),s.append(p,f),p.appendChild(a),c.textContent=t.valueasdassa,f.textContent="12/06/03",a.textContent="click edit to change text and edit when you are done",e.appendChild(n),m.addEventListener("click",(e=>{e.path[5].remove()})),C.addEventListener("click",(e=>{if(console.log(e.path[5].children[1].children[0].children[0].getAttribute("contenteditable")),"true"===e.path[5].children[1].children[0].children[0].children[0].getAttribute("contenteditable"))return e.path[5].children[1].children[0].children[0].children[0].setAttribute("contenteditable","false"),e.path[5].children[0].children[0].setAttribute("contenteditable","fa"),void e.path[5].children[1].children[0].children[1].setAttribute("contenteditable","false");e.path[5].children[1].children[0].children[0].children[0].setAttribute("contenteditable","true"),e.path[5].children[0].children[0].setAttribute("contenteditable","true"),e.path[5].children[1].children[0].children[1].setAttribute("contenteditable","true")}))}n.forEach((e=>e.addEventListener("click",o)))}f.styleTagTransform=u(),f.setAttributes=d(),f.insert=a().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=l(),n()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals,function(){console.log(101);const e=document.querySelector(".project-delete"),n=(document.querySelector(".display-text"),document.querySelector(".project-newtask")),t=document.querySelector(".sidebar-projects"),o=document.createElement("button"),r=document.createElement("button"),i=document.createElement("form"),a=document.createElement("input"),c=document.createElement("div"),d=document.querySelector(".display");n.addEventListener("click",(()=>{a.setAttribute("type","text"),c.classList.add("projectbuttons"),r.classList.add("confirm"),o.classList.add("cancel"),r.textContent="confirm",o.textContent="cancel",r.setAttribute("type","button"),o.setAttribute("type","button"),t.appendChild(i),i.appendChild(a),i.appendChild(c),c.appendChild(r),c.appendChild(o),n.remove()})),r.addEventListener("click",(()=>{""!==a.value?(function(){const e=document.createElement("button");e.textContent=a.value,e.classList.add("project-button");let n=Number(d.lastElementChild.getAttribute("project-ids"))+1;e.setAttribute("project-id",`${n}`),t.appendChild(e),document.querySelectorAll(".project-button").forEach((e=>{e.addEventListener("click",(()=>{var n;n=e.getAttribute("project-id"),document.querySelectorAll(".project").forEach((e=>{e.setAttribute("style","display:none;")})),document.querySelector(`div[project-ids='${n}']`).setAttribute("style","display:block;"),m()}))}))}(),t.appendChild(n),i.remove(),function(){let e=Number(d.lastElementChild.getAttribute("project-ids"))+1;const n=document.createElement("div"),t=document.createElement("div"),o=document.createElement("button"),r=document.createElement("form"),i=document.createElement("input"),a=document.createElement("button");n.classList.add("project"),t.classList.add("display-text"),o.classList.add("project-delete"),i.classList.add("taskinput"),a.classList.add("addtask"),i.setAttribute("name","task"),i.setAttribute("type","text"),o.textContent="delete project",a.textContent="Add new task",n.append(t,o,r),r.append(i,a),n.setAttribute("project-ids",`${e}`),d.appendChild(n),n.setAttribute("style","display:none;"),m()}()):o.click()})),o.addEventListener("click",(()=>{t.appendChild(n),i.remove()})),e.addEventListener("click",(e=>{console.log(e)}))}(),m()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,